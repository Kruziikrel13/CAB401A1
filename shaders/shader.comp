#version 450

layout(local_size_x = 16, local_size_y = 16) in;

layout(std430, binding = 0) buffer matrixA {
    float a[];
};
layout(std430, binding = 1) buffer matrixB {
    float b[];
};
layout(std430, binding = 2) buffer matrixC {
    float c[];
};

layout(push_constant) uniform PushConstants {
    int matrix_size;
} constants;

void main() {
    uint row = gl_GlobalInvocationID.y;
    uint col = gl_GlobalInvocationID.x;

    if (row >= constants.matrix_size || col >= constants.matrix_size) return;

    float result = 0.0;
    for (uint k = 0; k < constants.matrix_size; k++) {
        result += a[row * constants.matrix_size + k] * b[k * constants.matrix_size + col];
    }
    c[row * constants.matrix_size + col] = result;
}
